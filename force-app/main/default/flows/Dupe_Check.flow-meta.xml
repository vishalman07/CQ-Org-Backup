<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Email</name>
        <label>Send Email</label>
        <locationX>433</locationX>
        <locationY>351</locationY>
        <actionName>Account.AdminDupeCheck</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Account.AdminDupeCheck</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>51.0</apiVersion>
    <interviewLabel>Dupe Check {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Dupe Check</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_potential_merged_record</name>
        <label>Get potential merged record</label>
        <locationX>438</locationX>
        <locationY>128</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Search_Account_History</targetReference>
        </connector>
        <filterLogic>1 and 2 and 3 and (4 OR 5)</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Name</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>LastModifiedDate</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>BillingStreet</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.BillingStreet</elementReference>
            </value>
        </filters>
        <filters>
            <field>BillingState</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.BillingState</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Search_Account_History</name>
        <label>Search Account History</label>
        <locationX>615</locationX>
        <locationY>128</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Send_Email</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Field</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Merged</stringValue>
            </value>
        </filters>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_potential_merged_record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>CreatedDate</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>AccountHistory</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>Get_potential_merged_record</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>Account</object>
        <recordTriggerType>Delete</recordTriggerType>
        <triggerType>RecordBeforeDelete</triggerType>
    </start>
    <status>Obsolete</status>
</Flow>
